version: '3.8'

services:
  grafana:
    image: grafana/grafana:latest
    ports:
      - ${GRAFANA_PORT}:${GRAFANA_PORT}
    volumes:
      - grafana_data:/var/lib/grafana
      - log_data:/var/lib/grafana/logs
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
      GF_SERVER_HTTP_PORT: ${GRAFANA_PORT}
    depends_on:
      - influxdb

  inference:
    build:
      context: .
      dockerfile: src/inference/Dockerfile
    volumes:
      - log_data:/app/logs
    ports:
      - ${INFERENCE_PORT}:${INFERENCE_PORT}
    environment:
      - S3_PORT=${S3_PORT}
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
      - BUCKET_NAME=${BUCKET_NAME}
      - MLFLOW_PORT=${MLFLOW_PORT}
      - INFLUX_PORT=8086
      - INFLUX_ORG=${INFLUX_ORG}
      - INFLUX_DATABASE=${INFLUX_DATABASE}
      - INFLUX_TOKEN=${INFLUX_TOKEN}
      - INFERENCE_PORT=${INFERENCE_PORT}
      - MODEL_TRAINING_PORT=${MODEL_TRAINING_PORT}
      - MYSQL_PORT=3306
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    depends_on:
      - mlflow
      - minio
      - influxdb

  model_training:
    build:
      context: .
      dockerfile: src/model/Dockerfile
    volumes:
      - log_data:/app/logs
    ports:
      - ${MODEL_TRAINING_PORT}:${MODEL_TRAINING_PORT}
    environment:
      - S3_PORT=${S3_PORT}
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
      - BUCKET_NAME=${BUCKET_NAME}
      - MLFLOW_PORT=${MLFLOW_PORT}
      - INFLUX_PORT=8086
      - INFLUX_ORG=${INFLUX_ORG}
      - INFLUX_DATABASE=${INFLUX_DATABASE}
      - INFLUX_TOKEN=${INFLUX_TOKEN}
      - INFERENCE_PORT=${INFERENCE_PORT}
      - MODEL_TRAINING_PORT=${MODEL_TRAINING_PORT}
    depends_on:
      - mlflow
      - minio
      - inference

  mlflow:
    build:
      context: .
      dockerfile: src/mlflow/Dockerfile
    ports:
      - "${MLFLOW_PORT}:${MLFLOW_PORT}"
    environment:
      MLFLOW_PORT: ${MLFLOW_PORT}
      MLFLOW_TRACKING_URI: mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:3306/${MYSQL_DATABASE}
      MLFLOW_S3_ENDPOINT_URL: http://minio:${S3_PORT}
      AWS_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
    depends_on:
      - mysql
      - minio

  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql

  minio:
    image: minio/minio:latest
    ports:
      - ${S3_PORT}:${S3_PORT}
      - ${MINIO_UI_PORT}:${MINIO_UI_PORT}
    environment:
      MINIO_ACCESS_KEY: ${S3_ACCESS_KEY_ID}
      MINIO_SECRET_KEY: ${S3_SECRET_ACCESS_KEY}
    command: server /data --console-address :${MINIO_UI_PORT}
    volumes:
      - minio_data:/data

  influxdb:
    image: influxdb:latest
    ports:
      - 8086:8086
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: ${INFLUX_ADMIN_USER}
      DOCKER_INFLUXDB_INIT_PASSWORD: ${INFLUX_ADMIN_PASSWORD}
      DOCKER_INFLUXDB_INIT_ORG: ${INFLUX_ORG}
      DOCKER_INFLUXDB_INIT_BUCKET: ${INFLUX_DATABASE}
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${INFLUX_TOKEN}
    volumes:
      - influxdb_data:/var/lib/influxdb2
      - influxdb_config:/etc/influxdb2


volumes:
  log_data:
  grafana_data:
  mysql_data:
  minio_data:
  influxdb_data:
  influxdb_config:
